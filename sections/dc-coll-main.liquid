{{ 'dc-coll-main.css' | asset_url | stylesheet_tag }}
{{ 'dc-featured-products.css' | asset_url | stylesheet_tag }}

<div class="dc-coll-main">
  <div class="container">
    {% assign sug_col = 0 %}
    {% for block in section.blocks %}
    {% if block.type == 'coll' %}
    {% assign sug_col = sug_col | plus: 1 %}
    {% endif %}
  	{% endfor %}
    {% if sug_col != 0 %}
    <div class="sugg-collections flex-box{% if sug_col == 3 %} justify-between{% elsif sug_col == 2 %} justify-around{% else %} justify-center{% endif %}">
    {% for block in section.blocks %}
    {% if block.type == 'coll' %}
      {% assign sugg_coll = block.settings.collection %}
      <div href="{{ sugg_coll.url }}" class="sugg-collection flex-box" data-value="{{ sugg_coll.handle }}">
        <div class="sugg-coll-img">
        	{% if sugg_coll.image != blank %}
          		{{ sugg_coll.image | image_url: width: 146 | image_tag }}
          	{% else %}
          		<img src="{{ section.settings.image | img_url: 'x146' }}">
          	{% endif %}
        </div>
        <div class="sugg-coll-txt">
          <div class="sugg-coll-title">{{ sugg_coll.title }}</div>
          <div class="sugg-coll-age">{{ block.settings.age }}</div>
        </div>
      </div>
    {% endif %}
  	{% endfor %}
    </div>
    {% endif %}
    
    <div class="filters-titles-wrap flex-box justify-between align-center">
      <div class="filter-title">{{ section.settings.filter }}</div>
      <div class="total-porducts-wrap">
        <span class="total-products">{{ collection.products_count }} </span>
        <span class="total-products-title">{{ section.settings.tot_products }}</span>
      </div>
      <div class="sort-wrap">
        <div class="sort-title">{{ section.settings.sort }}</div>
        <div class="sort-types rel">
          <div class="selected-sort flex-box justify-between align-center">
            <div class="selected-sort-txt">{{ 'products.facets.sort_by_bestsellers' | t }}</div>
            <div class="down-chev">{% include 'icon-arrow-sm' %}</div>
          </div>
          <div class="sort-options">
            <div class="sort-option" data-value="best-selling">{{ 'products.facets.sort_by_bestsellers' | t }}</div>
            <div class="sort-option" data-value="price-ascending">{{ 'products.facets.sort_by_price_low_to_high' | t }}</div>
            <div class="sort-option" data-value="price-descending">{{ 'products.facets.sort_by_price_high_to_low' | t }}</div>
          </div>
        </div>
      </div>
    </div>
    
    
    <div class="coll-products-n-filter-wrap flex-box justify-between">
      <div class="coll-filters">
        {% for block in section.blocks %}
        {% if block.type == 'filter' %}
          <div class="coll-filter-type" data-filter-type="{{ block.settings.filter_type }}" data-filter-name="{{ block.settings.main_filter }}">
            {% if block.settings.main_filter != blank %}
            <div class="coll-filter-type-name-wrap coll-accordion">
              <div class="coll-filter-type-name">{{ block.settings.main_filter }}</div>
              <span class="coll-symbol">{% render "accordion-plus" %}</span>
            </div>
            {% endif %}
            <div class="coll-filter-options-wrap panel">
              {% if block.settings.sub_filter_1 != blank %}
              <div class="coll-filter-option-wrap" data-value="{{ block.settings.sub_filter_1 | replace: " ","-" | downcase }}">
                <div class="checkbox"><span class="check-sign">{% include 'icon-check-sign' %}</span></div>
                <div class="coll-filter-option-txt">{{ block.settings.sub_filter_1 }}</div>
              </div>
              {% endif %}
              {% if block.settings.sub_filter_2 != blank %}
              <div class="coll-filter-option-wrap" data-value="{{ block.settings.sub_filter_2 | replace: " ","-" | downcase }}">
                <div class="checkbox"><span class="check-sign">{% include 'icon-check-sign' %}</span></div>
                <div class="coll-filter-option-txt">{{ block.settings.sub_filter_2 }}</div>
              </div>
              {% endif %}
              {% if block.settings.sub_filter_3 != blank %}
              <div class="coll-filter-option-wrap" data-value="{{ block.settings.sub_filter_3 | replace: " ","-" | downcase }}">
                <div class="checkbox"><span class="check-sign">{% include 'icon-check-sign' %}</span></div>
                <div class="coll-filter-option-txt">{{ block.settings.sub_filter_3 }}</div>
              </div>
              {% endif %}
              {% if block.settings.sub_filter_4 != blank %}
              <div class="coll-filter-option-wrap" data-value="{{ block.settings.sub_filter_4 | replace: " ","-" | downcase }}">
                <div class="checkbox"><span class="check-sign">{% include 'icon-check-sign' %}</span></div>
                <div class="coll-filter-option-txt">{{ block.settings.sub_filter_4 }}</div>
              </div>
              {% endif %}
              {% if block.settings.sub_filter_5 != blank %}
              <div class="coll-filter-option-wrap" data-value="{{ block.settings.sub_filter_5 | replace: " ","-" | downcase }}">
                <div class="checkbox"><span class="check-sign">{% include 'icon-check-sign' %}</span></div>
                <div class="coll-filter-option-txt">{{ block.settings.sub_filter_5 }}</div>
              </div>
              {% endif %}
              {% if block.settings.sub_filter_6 != blank %}
              <div class="coll-filter-option-wrap" data-value="{{ block.settings.sub_filter_6 | replace: " ","-" | downcase }}">
                <div class="checkbox"><span class="check-sign">{% include 'icon-check-sign' %}</span></div>
                <div class="coll-filter-option-txt">{{ block.settings.sub_filter_6 }}</div>
              </div>
              {% endif %}
              {% if block.settings.sub_filter_7 != blank %}
              <div class="coll-filter-option-wrap" data-value="{{ block.settings.sub_filter_7 | replace: " ","-" | downcase }}">
                <div class="checkbox"><span class="check-sign">{% include 'icon-check-sign' %}</span></div>
                <div class="coll-filter-option-txt">{{ block.settings.sub_filter_7 }}</div>
              </div>
              {% endif %}
              {% if block.settings.sub_filter_8 != blank %}
              <div class="coll-filter-option-wrap" data-value="{{ block.settings.sub_filter_8 | replace: " ","-" | downcase }}">
                <div class="checkbox"><span class="check-sign">{% include 'icon-check-sign' %}</span></div>
                <div class="coll-filter-option-txt">{{ block.settings.sub_filter_8 }}</div>
              </div>
              {% endif %}
              {% if block.settings.sub_filter_9 != blank %}
              <div class="coll-filter-option-wrap" data-value="{{ block.settings.sub_filter_9 | replace: " ","-" | downcase }}">
                <div class="checkbox"><span class="check-sign">{% include 'icon-check-sign' %}</span></div>
                <div class="coll-filter-option-txt">{{ block.settings.sub_filter_9 }}</div>
              </div>
              {% endif %}
              {% if block.settings.sub_filter_10 != blank %}
              <div class="coll-filter-option-wrap" data-value="{{ block.settings.sub_filter_10 | replace: " ","-" | downcase }}">
                <div class="checkbox"><span class="check-sign">{% include 'icon-check-sign' %}</span></div>
                <div class="coll-filter-option-txt">{{ block.settings.sub_filter_10 }}</div>
              </div>
              {% endif %}
            </div>
          </div>
        {% endif %}
        {% endfor %}
      </div>
      <div class="coll-porducts flex-box">
      	{% for product in collection.products %}
          <div class="product-card rel{% for tag in product.tags %}{% assign allTags = tag | split: " - " %}{% for currTag in allTags %} {{ currTag | replace: " ","-" | downcase }}{% endfor %}{% endfor %}" data-product-id="{{ product.id }}">
            <a title="{{ product.title | escape  }}" class="product-card-hover no-t-m">
              <button class="btn product-btn">{{ section.settings.meerInfo }}</button>
            </a>
            <div class="product-card-image rel">
              <img class="default-img" src="{{ product.images[0] | default: product.featured_image | img_url: '392x' }}" alt="{{ product.title | escape }}" loading="lazy" />
              <img class="hovered-img no-t-m" src="{{ product.images[1] | default: product.featured_image | img_url: '392x' }}" alt="{{ product.title | escape }}" loading="lazy" />
            </div>
            <div class="product-card-details">
              <div class="prooduct-title-desc">
                <p class="product-card-title">{{ product.title | strip_html | truncate: 17 | escape }}</p>
                <p class="product-card-desc">{{ product.metafields.my_fields.extra_info | escape  }}</p>
              </div>
              <div class="product-card-price">
                <p class="product-price">{{ section.settings.vanaf_text }} {{ product.selected_or_first_available_variant.price | money }}</p>
              </div>
            </div>
          </div>
          {% if collection.products_count >= 5 %}
        	{% if forloop.index == 4 %}
        		{% for block in section.blocks %}
        			{% if block.type == 'suggestion' %}
        				<div class="product-finder" style="background-image: url({{ block.settings.bg_img | img_url: '590x' }});">
                          <div class="product-finder-title tk-le-monde-livre-classic-byol">{{ block.settings.title }}</div>
                          <div class="product-finder-desc">{{ block.settings.desc }}</div>
                          {% if block.settings.section_btn_text != blank %}
                          <a href="{{ block.settings.section_btn_url }}" class="btn {% if block.settings.isProductFinder == true %}btn-productFinder blue-btn{% endif %}">{{ block.settings.section_btn_text }}</a>
                          {% endif %}
        				</div>
        			{% endif %}
        		{% endfor %}
        	{% endif %}
          {% endif %}
        {% endfor %}
        {% if collection.products_count <= 4 %}
        		{% for block in section.blocks %}
        			{% if block.type == 'suggestion' %}
        				<div class="product-finder" style="background-image: url({{ block.settings.bg_img | img_url: '590x' }});">
                          <div class="product-finder-title tk-le-monde-livre-classic-byol">{{ block.settings.title }}</div>
                          <div class="product-finder-desc">{{ block.settings.desc }}</div>
                          {% if block.settings.section_btn_text != blank %}
                          <a href="{{ block.settings.section_btn_url }}" class="btn {% if block.settings.isProductFinder == true %}btn-productFinder blue-btn{% endif %}">{{ block.settings.section_btn_text }}</a>
                          {% endif %}
        				</div>
        			{% endif %}
        		{% endfor %}
          {% endif %}
        {% for product in collection.products %}
    	{% include "product-card", total_variants: section.settings.total_variants, maten: section.settings.maten, koop_online: section.settings.koop_online, koop_local: section.settings.koop_local %}
    {% endfor %}
      </div>
    </div>
  </div>
</div>


<script>
  
  function addProductCard() {
    $('.product-card, .product-card-hover, .product-btn').click(function() {
      var productId = $(this).closest(".product-card").data("product-id");
      $('#card-product-'+productId).css("opacity", 1);
      $('#card-product-'+productId).css("pointer-events", "auto");
      $('#card-product-'+productId).find(".card-product").removeClass("no-disp");
//       $('#card-product-'+productId+' .product-card-for').not('.slick-initialized').slick();
//       $('#card-product-'+productId+' .product-card-nav').not('.slick-initialized').slick();
      $('#card-product-'+productId+' .product-card-for').not('.slick-initialized').slick({
        slidesToShow: 1,
        slidesToScroll: 1,
        arrows: false,
        dots: false,
        fade: true,
        asNavFor: '#card-product-'+productId+' .product-card-nav',
        responsive: [
          {
            breakpoint: 992,
            settings: {
              arrows: false,
              dots: true
            }
          }
        ]
      });
      $('#card-product-'+productId+' .product-card-nav').not('.slick-initialized').slick({
        slidesToShow: 5,
        slidesToScroll: 1,
        asNavFor: '#card-product-'+productId+' .product-card-for',
        focusOnSelect: true,
        centerMode: true,
        responsive: [
          {
            breakpoint: 992,
            settings: {
              centerMode: false,
              slidesToShow: 5
            }
          }
        ]
      });
      $('#card-product-'+productId+' .product-card-for').slick('resize');
      $('#card-product-'+productId+' .product-card-nav').slick('resize');
    });
  }
</script>

<script>
  var acc3 = document.getElementsByClassName("coll-accordion");
  var j;

  for (j = 0; j < acc3.length; j++) {
    acc3[j].addEventListener("click", function() {
      this.classList.toggle("active");
      var panel3 = this.nextElementSibling;
      if (panel3.style.maxHeight) {
        panel3.style.maxHeight = null;
      } else {
        panel3.style.maxHeight = panel3.scrollHeight + "px";
      }
    });
  }
</script>

<script>

  var getUrlParameter = function getUrlParameter(sParam) {
    var sPageURL = window.location.search.substring(1),
        sURLVariables = sPageURL.split('&'),
        sParameterName,
        i;

    for (i = 0; i < sURLVariables.length; i++) {
      sParameterName = sURLVariables[i].split('=');

      if (sParameterName[0] === sParam) {
        return sParameterName[1] === undefined ? true : decodeURIComponent(sParameterName[1]);
      }
    }
  };
  
  $(document).ready(function() {
    
    addProductCard();
    getSelectedFilters();
    runFilter();

  });
  
  function getSelectedFilters() {
    var filtervar = getUrlParameter('filters');
    var sortvar = getUrlParameter('sort_by');

    if(typeof filtervar !== "undefined") {
      $('.coll-filter-option-wrap').removeClass('checked');
      var array = filtervar.split(",");
      $.each(array,function(i){

        $('.coll-filter-option-wrap').each(function() {
          if($(this).data('value') == array[i]) {
//             console.log($(this).data('value'));
            $(this).addClass('checked');
          }
        });

      });
    }
    else {
      $('.coll-filter-option-wrap').removeClass('checked');
    }

    if(typeof sortvar !== "undefined") {
      $('.sort-option').removeClass('checked');
      var array = sortvar.split(",");
      $.each(array,function(i){

        $('.sort-option').each(function() {
          if($(this).data('value') == array[i]) {
//             console.log($(this).data('value'));
            $(this).addClass('checked');
          }
        });

      });
      $(".selected-sort-txt").text($('.sort-option.checked').text());
    }
    else {
      $('.sort-option').removeClass('checked');
    }
    
    var collex = window.location.href.split('/').pop().split('?')[0];
    $('.sugg-collection').removeClass("checked");
    $('.sugg-collection').each(function() {
//       console.log($(this).data('value'));
//       console.log(collex);
      if($(this).data('value') == collex) {
        $(this).addClass('checked');
      }
    });
  }
  
  function runFilter() {
  	$(".product-card").addClass("no-disp");
	$('.product-card').addClass('fop');
    
    if($('.coll-filter-option-wrap.checked').length > 0) {
      var arrClassPhysical = [];
      var arrClassBehavioral = [];
      
      for(var i = 0; i < $('.coll-filter-type').length; i++) {
        $currentFilter = $('.coll-filter-type')[i];

        if($($currentFilter).data("filter-type") == "multiple") {
          
          $multipleFilters = $($currentFilter).find(".coll-filter-option-wrap.checked");
          var tempArr = new Array();
          
          if($($multipleFilters).length > 0) {
            $($multipleFilters).each(function() {
              tempArr.push($(this).data("value"));
            });
          }
          
          if(tempArr.length > 0) {
            arrClassPhysical.push(tempArr);
          }
        }
        else {
          $selectedFilter = $($currentFilter).find(".coll-filter-option-wrap.checked");
          if($($selectedFilter).length > 0) {
            $($selectedFilter).each(function() {
              arrClassBehavioral.push($(this).data("value"));
            });
          }
        }
      }
      
      $('.product-card').data('iteration',0);
      
//       $('.coll-filter-option-wrap.checked').each(function() {
//         $filterType = $(this).parent().parent().data("filter-type");
//         if($filterType.includes("multiple")) {
// //           arrClassPhysical.push($(this).data('value'));
//         }
//         else {
//           arrClassBehavioral.push($(this).data('value'));
//         }
//       });
      console.log(arrClassPhysical);
      console.log(arrClassBehavioral);
      console.log("========================");
      
      var totalIterations = 0;
      
      for(var j = 0; j < arrClassPhysical.length; j++) {
        
        var tempFilterArr = arrClassPhysical[j];
        console.log(tempFilterArr);
        
        if(tempFilterArr.length > 0) {
          
          $('.product-card').each(function(i, v) {
          
            if($(this).data("iteration") == j) {
              for(var k = 0; k < tempFilterArr.length; k++) {

                if($(this).hasClass(tempFilterArr[k])) {
                  $(this).data("iteration",j+1);
                }

              }
            }
          });
          totalIterations = totalIterations + 1;
        }
        
//         $('.product-card').each(function(i, v) {
//           if($(this).data("iteration") >= j+1) {
//             $(this).removeClass("no-disp");
//           }
//         });
      }
      
      $.each(arrClassBehavioral, function(index, val) {
        $('.product-card').each(function(i,v) {
          if($(this).data("itertaion") == totalIterations && $(this).hasClass(val)) {
            $(this).data('iteration',(parseInt($(this).data('iteration')) || 0)+1);
          }
        });
        totalIterations = totalIterations + 1;
      });
      
      console.log("totalIterations - ");
      console.log(totalIterations)
      
      $('.product-card').each(function(i,v) {
        if($(this).data("iteration") >= totalIterations && $(this).hasClass('fop')) {
          $(this).removeClass('no-disp');
        }
      });
      
//       $.each(arrClassPhysical, function(index, val) {
//         $('.product-card').each(function(i,v) {        
//           if($(this).hasClass(val)) {
//             $(this).data('iteration',(parseInt($(this).data('iteration')) || 0)+1);
//           }
//         });
//         $('.product-card').each(function(i,v) {            
//           if($(this).data('iteration') == $('.coll-filter-option-wrap.checked').length && $(this).hasClass('fop')) {
//             $(this).removeClass('no-disp');
//           }
//         });
//       });
      
    } else {
      $('.product-card').removeClass('no-disp');
    }
    
//     $('.fop').removeClass('fop'); 
    $('.total-products').text($('.product-card:not(.no-disp)').length);
  }
  runFilter();
  
  $('.coll-filter-option-wrap').click(function() {
    $filterType = $(this).parent().parent().data("filter-type");
    $siblingFilters = $(this).parent().find(".coll-filter-option-wrap");
    if($filterType.includes("multiple")) {
      $(this).toggleClass('checked');
    }
    else {
      var isSelected = $(this).hasClass('checked');
      $siblingFilters.removeClass("checked");
      if(isSelected) {
        $(this).removeClass("checked");
      } else {
      	$(this).addClass("checked");
      }
    }
    
    var filtersx = '';
    if($('.coll-filter-option-wrap.checked').length > 0) {
      if($('.sort-option.checked').length > 0) {
        filtersx = '&filters=';      
      } else {      
        filtersx = 'filters=';    
      }
      $('.coll-filter-option-wrap.checked').each(function(index) {
        if(index > 0) {
          filtersx += ','+$(this).data('value');
        } else {
          filtersx += $(this).data('value');        
        }
      });
    }
    var sortx = '?';
    if($('.sort-option.checked').length > 0) {
      sortx = '?sort_by='+$('.sort-option.checked').data('value');
    }
    var url = 'https://'+window.location.hostname+'{%- unless routes.root_url == '/' -%}{{ routes.root_url }}{%- endunless -%}/collections/'+window.location.href.split('/').pop().split('?')[0]+sortx+filtersx;
    window.history.pushState({}, null, url);
    runFilter();
  });
  
  $('.selected-sort').click(function() {
  	$(this).toggleClass('open');
    $('.sort-options').toggleClass('open');
  });
  
  $('.sort-option').click(function() {
    var sortx = '';
    var new_val = $(this).text();
    $('.selected-sort-txt').text(new_val);
    $('.selected-sort').removeClass('open');
    $('.sort-options').removeClass('open');
    
    if($(this).hasClass('checked')) {
      $('.sort-option').removeClass('checked');
      sortx = '?';
    } else {
      $('.sort-option').removeClass('checked');
      $(this).addClass('checked');
      sortx = '?sort_by='+$(this).data('value');
    }
    var filtersx = '';
    if($('.coll-filter-option-wrap.checked').length > 0) {
      if($('.sort-option.checked').length > 0) {
        filtersx = '&filters=';      
      } else {      
        filtersx = 'filters=';    
      }
      $('.coll-filter-option-wrap.checked').each(function(index) {
        if(index > 0) {
          filtersx += ','+$(this).data('value');
        } else {
          filtersx += $(this).data('value');        
        }
      });
    }
    var url = 'https://'+window.location.hostname+'{%- unless routes.root_url == '/' -%}{{ routes.root_url }}{%- endunless -%}/collections/'+window.location.href.split('/').pop().split('?')[0]+sortx+filtersx;
    window.history.pushState({}, null, url);
    $.ajax({
      url: url,
      method: "GET"
    })
    .done(function( data ) {
      var placeholder = document.createElement('div');
      placeholder.innerHTML = data;
      var divx = $(placeholder).find('.coll-porducts');
      $('.coll-porducts').first().replaceWith(placeholder.querySelector('.coll-porducts'));
      addProductCard();
      runFilter();
    })
    .fail(function(error) {
      console.log( error );
    });
  });
  
  $('.sugg-collection').click(function() {
    var collx;
    var selectedColl = $(this).hasClass('checked');
    
    $('.sugg-collection').removeClass('checked');
    if(selectedColl) {
      $(this).removeClass("checked");
      collx = 'all';
    }
    else {
      $(this).addClass('checked');
      collx = $(this).data('value');
    }
    
    var filtersx = '';
    if($('.coll-filter-option-wrap.checked').length > 0) {
      if($('.sort-option.checked').length > 0) {
        filtersx = '&filters=';      
      } else {      
        filtersx = 'filters=';    
      }    
      $('.coll-filter-option-wrap.checked').each(function(index) {
        if(index > 0) {
          filtersx += ','+$(this).data('value');
        } else {
          filtersx += $(this).data('value');        
        }
      });
    }
    var sortx = '?';
    if($('.sort-option.checked').length > 0) {
      sortx = '?sort_by='+$('.sort-option.checked').data('value');
    }    
    var url = 'https://'+window.location.hostname+'{%- unless routes.root_url == '/' -%}{{ routes.root_url }}{%- endunless -%}/collections/'+collx+sortx+filtersx;
    window.history.pushState({}, null, url);
    $.ajax({
      url: url,
      method: "GET"
    })
    .done(function( data ) {
      var placeholder = document.createElement('div');
      placeholder.innerHTML = data;
      var divx = $(placeholder).find('.coll-porducts');
      $('.coll-porducts').first().replaceWith(placeholder.querySelector('.coll-porducts'));
      var collHero = $(placeholder).find('.hero-small');
      $('.hero-small').first().replaceWith(collHero);
      addProductCard();
      runFilter();
    })
    .fail(function(error) {
      console.log( error );
    });
  });
  
  $(window).on('popstate', function() {
    getSelectedFilters();
    runFilter();
  });
  
</script>

{% schema %}
  {
    "name": "DC Collection Main",
    "settings": [
		{
          "type": "text",
          "id": "meerInfo",
          "label": "Quick View button text",
		  "default": "QUICK VIEW"
        },
		{
			"type": "text",
			"id": "filter",
			"label": "Filter Title",
			"default": "Filter"
		},
		{
			"type": "text",
			"id": "tot_products",
			"label": "Total Products",
			"default": "Products"
		},
		{
			"type": "text",
			"id": "sort",
			"label": "Sort Title",
			"default": "Sort By"
		},
		{
          "type": "text",
          "id": "koop_online",
          "label": "Koop Online Button text",
		  "default": "KOOP ONLINE"
        },
		{
          "type": "text",
          "id": "koop_local",
          "label": "Koop Lokaal Button text",
		  "default": "KOOP LOKAAL"
        }
	],
	"blocks": [
		{
			"name": "Collection",
			"type": "coll",
			"limit": 3,
			"settings": [
				{
					"type": "collection",
					"id": "collection",
					"label": "Collection"
				},
				{
					"type": "image_picker",
					"id": "image",
					"label": "Image"
				},
				{
					"type": "text",
					"id": "age",
					"label": "Age Range"
				}
			]
			
		},
		{
			"name": "Filter",
			"type": "filter",
			"settings": [
				{
                  "type": "select",
                  "id": "filter_type",
                  "label": "Filter Type",
                  "options": [
                  {
                    "value": "single",
                    "label": "Single Selection"
                  },
                  {
                    "value": "multiple",
                    "label": "Multiple Selection"
                  }
                  ],
                  "default": "single"
                },
				{
					"type": "text",
					"id": "main_filter",
					"label": "Main Filter"
				},
				{
					"type": "text",
					"id": "sub_filter_1",
					"label": "Sub Filter 1"
				},
				{
					"type": "text",
					"id": "sub_filter_2",
					"label": "Sub Filter 2"
				},
				{
					"type": "text",
					"id": "sub_filter_3",
					"label": "Sub Filter 3"
				},
				{
					"type": "text",
					"id": "sub_filter_4",
					"label": "Sub Filter 4"
				},
				{
					"type": "text",
					"id": "sub_filter_5",
					"label": "Sub Filter 5"
				},
				{
					"type": "text",
					"id": "sub_filter_6",
					"label": "Sub Filter 6"
				},
				{
					"type": "text",
					"id": "sub_filter_7",
					"label": "Sub Filter 7"
				},
				{
					"type": "text",
					"id": "sub_filter_8",
					"label": "Sub Filter 8"
				},
				{
					"type": "text",
					"id": "sub_filter_9",
					"label": "Sub Filter 9"
				},
				{
					"type": "text",
					"id": "sub_filter_10",
					"label": "Sub Filter 10"
				}
			]
		},
		{
			"name": "Product Finder",
			"type": "suggestion",
			"settings": [
				{
					"type": "image_picker",
					"id": "bg_img",
					"label": "Background Image"
				},
				{
					"type": "text",
					"id": "title",
					"label": "Title"
				},
				{
					"type": "text",
					"id": "desc",
					"label": "Description"
				},
				{
					"type": "checkbox",
					"id": "isProductFinder",
					"label": "Is Button ProductFinder",
					"info": "Tick this field only on ProductFinder related button"
				},
				{
                    "label": "Section Button text",
                    "id": "section_btn_text",
                    "type": "text"
                },
                {
                    "label": "Section Button url",
                    "id": "section_btn_url",
                    "type": "url"
                }
			]
		}
	],
	"presets": [
		{
			"name": "DC Collection Main"
		}
	]
  }
{% endschema %}

{% stylesheet %}
{% endstylesheet %}

{% javascript %}
{% endjavascript %}
