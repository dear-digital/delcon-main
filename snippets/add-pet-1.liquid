<div class="wrap" style="position: relative; z-index: 9;">
  <div class="modal">
    <div class="container">
      <div class="my-pet-1 rel" id="addPet1">
        <span class="close-pet" data-form="addPet1">{% include 'icon-close-new' %}</span>
        <h2 class="tk-le-monde-livre-classic-byol text-center">{{ 'customer.pet_details.add_pet' | t }}</h2>
        
        <form action="/a/custmeta" method="POST" id="custmeta">
          <div class="my-pet-form">

            <input type="hidden" id="customer_id" name="customer[id]" value="{{ customer.id }}" />
            <div class="row">
              <div class="column">
                <label class="my-pet-info">{{ 'customer.pet_details.pet_name' | t }}</label>
                <input type="text" name="metafield[customer.pet_name]" value="{{ customer.metafields.customer.pet_name }}" id="{{ 'customer.pet_details.pet_name' | t }}" placeholder="{{ 'customer.pet_details.pet_name' | t }}" required />
              </div>
              <div class="column">
                <label class="my-pet-info">{{ 'customer.pet_details.pet_dob' | t }}</label>
                <input type="date" name="metafield[customer.pet_dob]" value="{{ customer.metafields.customer.pet_dob }}" id="{{ 'customer.pet_details.pet_dob' | t }}" placeholder="{{ 'customer.pet_details.pet_dob' | t }}" required />
              </div>
            </div>

            
          </div>
            
          <div class="flex-box justify-between align-center" style="margin-top: 8px;">
            <span class="cancel-edit" data-form="addPet1">{{ 'customer.addresses.cancel' | t }}</span>
            <input type="submit" class="btn pet-btn" value="{{ 'customer.pet_details.add_pet' | t }}" />
          </div>
          
        </form>
      </div>
    </div>
  </div>
</div>

<script>
  
  function addPet(formData) {
    $.ajax({
      type: "POST",
      dataType: "json",
      data: $(formData).serialize(),
      url: "/a/custmeta",
      success: function (data) {
        var formValid = (data.status === 'OK');
        if (formValid) {
          var msgs = '';
          for (var i=0;i<data.messages.length;i++) {
            msgs += '-- ' + data.messages[i] + '\n';
          }
          if (msgs > '') {
            alert('SUCCESS WITH MESSAGES:\n\n' + msgs);
          }
          else {
            alert('SUCCESS!');
          }
        }
        else {
          alert('Status: ' + data.status + '\nMessage: ' + data.message);
        }
      },
      error: function (jqXHR, textStatus, errorThrown) {
        alert('AJAX or Server 500 error occurred');
      }
    });
  }
  
  $(document).ready(function() {
    $(".pet-type").click(function() {
      $(".pet-type").removeClass("selected");
      $(this).addClass("selected");
    });
    
    $(".pet-gender-info").click(function() {
      $(".pet-gender-info").removeClass("selected");
      $(this).addClass("selected");
    });
    
    $(".pet-activity").click(function() {
      $(".pet-activity").removeClass("selected");
      $(this).addClass("selected");
    });
    
    $(".pet-neutered").click(function() {
      $(".pet-neutered").removeClass("selected");
      $(this).addClass("selected");
    });
    
    $('form#custmeta').submit(function(e) {
      e.preventDefault();
      var formData = new FormData($('form#custmeta')[0]);

//       formData.set("customer[id]",6092639076531);
//       formData.set("metafield[customer.pet_weight]",parseInt($('#Weight').val()));
//       formData.set("metafield[customer.pet_type]",$('.pet-type.selected .pet-type-radio').attr('id'));
//       formData.set("metafield[customer.pet_gender]",$('.pet-gender-info.selected .pet-gender-radio').attr('id'));
//       formData.set("metafield[customer.pet_neutered]",$('.pet-neutered.selected .pet-neutered-radio').attr('id'));
//       formData.set("metafield[customer.pet_activity]",$('.pet-activity.selected .pet-activity-radio').attr('id'));

//       var petComplaints = "";

//       $('.pet-complaint-checkbox:checked').each(function() {
//         var complaintId = $(this).attr("id");
//         petComplaints = petComplaints + complaintId + ", ";
//       });

//       petComplaints = petComplaints.substring(0,petComplaints.lastIndexOf(','));
//       console.log("Complaints : "+petComplaints);
//       formData.set("metafield[customer.pet_complaints]",petComplaints);

      const value = Object.fromEntries(formData.entries());
      console.log($(formData).serialize());
      console.log(value);
      
      addPet(formData);
    });
  });
  
</script>